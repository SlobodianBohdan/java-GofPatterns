
        Chain (ланцюжок відповідальностей) - шаблон об'єктно-орієнтованого дизайну у програмуванні.
        В об'єктно-орієнтованому дизайні, шаблон «ланцюжок відповідальностей» є шаблоном, який складається з об'єктів
    «команда» і серії об'єктів-виконавців. Кожен об'єкт-виконавець має логіку, що описує типи об'єктів «команда»,
    які він може обробляти, а також як передати далі ланцюжком ті об'єкти-команди, що він не може обробляти. Крім
    того існує механізм для додавання нових призначених для обробки об'єктів у кінець ланцюжка.
        У варіаціях стандартного ланцюжка відповідальностей, деякі обробники можуть бути в ролі диспетчерів, які
    здатні відсилати команди в різні напрямки формуючи дерево відподальності. У деяких випадках це можна організувати
    рекурсивно, коли об'єкт який оброблюється викликає об'єкт вищого рівня обробки з командою, що пробує вирішити меншу
    частину проблеми; у цьому випадку рекурсія продовжує виконуватися поки команда не виконається, або поки дерево
    повністю не буде оброблене.
        Цей шаблон застосовує ідею слабкого зв'язку, який розглядається як програмування у найкращих практиках.

-----------------------------------------------------------------------------------------------------------------------

        Шаблон рекомендований для використання в умовах:

    - В розроблюваної системі є група об'єктів, які можуть обробляти повідомлення певного типу;
    - Всі повідомлення повинні бути оброблені хоча б одним об'єктом системи;
    - Повідомлення в системі обробляються за схемою «обробив сам або передай іншому», тобто одні повідомлення
      обробляються на тому рівні, де вони отримані, а інші пересилаються об'єктам іншого рівня.

-----------------------------------------------------------------------------------------------------------------------

        Переваги:
    - Відокремлює відправника запиту та його одержувачів.
    - Спрощує ваш об'єкт, оскільки він не повинен знати про структуру ланцюга та зберігати прямі посилання на
      його членів.
    - Дозволяє динамічно додавати або видаляти відповідальність, змінюючи учасників або замовлення ланцюга.

        Недоліки:
    - Важко спостерігати характеристики виконання та налагодження.

-----------------------------------------------------------------------------------------------------------------------
